{"version":3,"sources":["components/_firebase.js","routes/Loading.js","components/Card.js","components/store.js","routes/Home.js","routes/Auth.js","components/Header.js","components/Footer.js","components/NumberSlide.js","components/AddSleepData.js","components/Popup.js","components/SleepCard.js","routes/Record.js","components/ColorSample.js","components/Pallet.js","routes/Setting.js","App.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","auth","getAuth","db","getFirestore","FB_AUTH","signOut","isPop","signInWithPopup","signInWithRedirect","callbackFun","onAuthStateChanged","FB_DB","get","name","a","res","getDocs","collection","forEach","v","push","id","data","add","obj","callback","addDoc","then","delete","deleteDoc","doc","update","updateDoc","alert","Loading","Card","children","title","className","slice","createSlice","initialState","user","sleepData","colorSet","mainColor","subColor","theme","fontColor","reducers","setUser","state","action","payload","setSleep","soltTmp","sort","b","date","setColorSet","removeSleep","filter","addSleep","ACTION","actions","configureStore","reducer","connect","props","dispatch","connectSleepDB","getSleepTime","time1","time2","str","h1","substr","m1","h2","m2","diffH","diffM","sleepDataFor","map","rating","sleepStart","sleepTimeStr","sleepEnd","sleepTime","findBestTime","time","length","score","start","times","i","bestTime","bestTimeAt","height","style","bottom","left","Auth","onClick","isLogedIn","displayName","Footer","to","NumberSlide","val","min","max","setter","onClickBtn","e","value","target","attributes","curr","addZero","num","editId","sleepObj","_sleepData","callbaclFn","isNew","_today","Date","useState","startH1","setStartH1","startH2","setStartH2","startM1","setStartM1","startM2","setStartM2","startHMax","setStartHMax","startMMax","setStartMMax","endH1","setEndH1","endH2","setEndH2","endM1","setEndM1","endM2","setEndM2","endHMax","setEndHMax","endMMax","setEndMMax","getFullYear","getMonth","getDate","setDate","step","setStep","setSleepData","timeSet","flag","frontN","backNSetter","maxSetter","useEffect","startT","endT","prev","document","querySelectorAll","el","classList","remove","querySelector","marginLeft","onBtnClick","innerText","window","confirm","uid","onClickRating","Popup","isOpend","clossBtnClick","show","setShow","showAnim","setShowAnim","setTimeout","Rating","addBtnClick","editBtnClick","isDeleted","setIsDeleted","emoji","getEmozi","console","log","isAddPopOpend","setIsAddPopOpend","isEditPopOpend","setIsEditPopOpend","setEditId","onEditBtnClick","onCloseBtnClick","category","no","Pallet","noSet","updateColorSet","saveTheme","main","sub","font","connectThemeDB","setIsLogedIn","isLoading","setIsLoading","getElementById","themeColor","email","themeData","path","element","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.1afb61c3.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider, signOut, signInWithRedirect, signInWithPopup ,onAuthStateChanged} from \"firebase/auth\";\r\nimport { getFirestore,getDocs,collection,addDoc,deleteDoc ,doc,updateDoc} from \"firebase/firestore\"\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDbUluFwoJWUYGUysFeUy4Vr0zHYDSNFU0\",\r\n  authDomain: \"good-sleep-a2c34.firebaseapp.com\",\r\n  projectId: \"good-sleep-a2c34\",\r\n  storageBucket: \"good-sleep-a2c34.appspot.com\",\r\n  messagingSenderId: \"955570029105\",\r\n  appId: \"1:955570029105:web:a1ed5ab2685746c74e0b10\",\r\n  measurementId: \"G-6RBM2RW3BN\"\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\nexport const provider = new GoogleAuthProvider();\r\nexport const auth = getAuth();\r\nexport const db = getFirestore();\r\n\r\nexport const FB_AUTH = {\r\n  signOut: () => {\r\n    signOut(auth)\r\n  },\r\n  signInWithGoogle: (isPop = false) => {\r\n    isPop ? signInWithPopup(auth, provider) : signInWithRedirect(auth, provider);\r\n  },\r\n  authChange:(callbackFun)=>{\r\n    onAuthStateChanged(auth, typeof callbackFun === 'function' ? callbackFun:null);\r\n  }\r\n}\r\n\r\nexport const FB_DB = {\r\n  get: async (name)=>{\r\n    let res = [];\r\n    const data = await getDocs(collection(db, name));\r\n    data.forEach(v=>res.push({id:v.id,...v.data()}))\r\n    return res;\r\n  },\r\n  add:(name,obj,callback)=>{\r\n    addDoc(collection(db,name),obj).then((res)=>{\r\n      if(typeof callback === 'function')\r\n      callback(res.id);\r\n    });\r\n  },\r\n  delete:(name,id)=>{\r\n    deleteDoc(doc(db,name,id));\r\n  },\r\n  update:(name,id,data,callback)=>{\r\n    updateDoc(doc(db, name, id),data).then(()=>{\r\n      alert('수정이 완료되었습니다.')\r\n      if(typeof callback === 'function')\r\n      callback();\r\n    });\r\n  }\r\n}","const Loading = () =>{\r\n    return(<div>Loading...</div>)\r\n}\r\n\r\nexport default Loading;","import '../css/card.css'\r\n\r\nconst Card = ({ children, title }) => {\r\n    return <>\r\n        <div className='card-wrap theme-color'>\r\n            <div className='card-wrap-header sub-color font-color'>{title}</div>\r\n            {children}\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Card","import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n    name: 'useReducer',\r\n    initialState: {\r\n        user: {},\r\n        sleepData: [],\r\n        colorSet: {\r\n            mainColor: '01',\r\n            subColor: '01',\r\n            theme: '01',\r\n            fontColor: '01',\r\n        }\r\n    },\r\n    reducers: {\r\n        setUser: (state, action) => { state.user = action.payload },\r\n        setSleep: (state, action) => { \r\n            let soltTmp = [...action.payload]\r\n            soltTmp.sort((a,b)=>b.date -a.date)\r\n\r\n            state.sleepData = soltTmp\r\n        },\r\n        setColorSet: (state, action) => { state.colorSet = action.payload },\r\n        removeSleep: (state, action) => {\r\n            state.sleepData = state.sleepData.filter(data => data.id !== action.payload)\r\n        },\r\n        addSleep:(state, action)=>{\r\n            state.sleepData = [action.payload,...state.sleepData];\r\n        }\r\n    }\r\n})\r\n\r\nexport const ACTION = slice.actions;\r\nexport default configureStore({ reducer: slice.reducer })","import { connect } from \"react-redux\";\r\nimport Card from \"../components/Card\";\r\nimport { ACTION } from \"../components/store\";\r\nimport '../css/home.css'\r\n\r\nconst Home = ({ user, sleepData = [], connectSleepDB }) => {\r\n    function getSleepTime(time1, time2, str = false) {\r\n        const h1 = time1.substr(0, 2) * 1;\r\n        const m1 = time1.substr(2, 2) * 1;\r\n        const h2 = time2.substr(0, 2) * 1;\r\n        const m2 = time2.substr(2, 2) * 1;\r\n\r\n        let diffH = h1 > h2 ? 24 + h2 - h1 : h2 - h1;\r\n        let diffM = m2 - m1;\r\n\r\n        if (diffM < 0) {\r\n            diffM += 60;\r\n            diffH--;\r\n        }\r\n\r\n        return str ? (diffH + 'H ' + diffM + 'M') : diffH * 60 + diffM\r\n    }\r\n\r\n    //sleep for 를 추천하기위한 배열\r\n    const sleepDataFor = sleepData.map(v => {\r\n        return {\r\n            rating: v.rating,\r\n            sleepStart: v.sleepStart,\r\n            sleepTimeStr: getSleepTime(v.sleepStart, v.sleepEnd, true),\r\n            sleepTime: getSleepTime(v.sleepStart, v.sleepEnd)\r\n        }\r\n    })\r\n\r\n    //bestTime 을 찾음\r\n    let findBestTime = [];\r\n    sleepDataFor.forEach(v => {\r\n        if (findBestTime.filter(time => time.time === v.sleepTimeStr).length === 0) {\r\n            findBestTime.push({ \r\n                time: v.sleepTimeStr, \r\n                score: 0, \r\n                start: v.sleepStart.substr(0,2) + ':' +v.sleepStart.substr(2,2)\r\n            })\r\n        }\r\n\r\n        findBestTime.forEach((times, i) => {\r\n            if (times.time === v.sleepTimeStr) findBestTime[i].score += (v.rating - 3) * 1;\r\n        })\r\n    })\r\n\r\n    findBestTime.sort((a, b) => b.score - a.score)\r\n\r\n    const bestTime = findBestTime.length > 0 ? findBestTime[0].time : '';\r\n    const bestTimeAt = findBestTime.length > 0 ? findBestTime[0].start : '';\r\n\r\n    return (<div className='home-wrap'>\r\n        <div className='home-wrap-full'>\r\n            <Card title={'time line'}>\r\n                <div className='home-graph-wrap'>\r\n                    {sleepData.map(v => {\r\n                        const height = (getSleepTime(v.sleepStart, v.sleepEnd) - 120) / 5;\r\n                        return <span className='home-graph-data' key={v.id}>\r\n                            <span className={'home-graph-bar home-graph-rating' + v.rating + ' home-graph-sleeptime sub-color'}\r\n                                style={{ height: height > 80 ? 80 : height + 'px' }}>\r\n                            </span>\r\n                            <span className='home-graph-date'>{`${v.date.substr(2, 2)}/${v.date.substr(4, 2)}/${v.date.substr(6, 2)}`}</span>\r\n                        </span>\r\n                    })}\r\n                </div>\r\n            </Card>\r\n        </div>\r\n\r\n        <div className='home-wrap-half'>\r\n            <Card title={'sleep for'}>\r\n                <div className='home-for-you-wrap'>\r\n                    <span className='home-for-you-hour main-color'>{bestTime}</span>\r\n                    {/* <span className='home-for-you-base'>123일간의 데이터를 기반으로 추천</span> */}\r\n                </div>\r\n            </Card>\r\n            <Card title={'sleep at'}>\r\n                <div className='home-at-you-wrap'>\r\n                    <span className='home-at-you-hour main-color'>{bestTimeAt}</span>\r\n                    {/* <span className='home-for-you-base'>123일간의 데이터를 기반으로 추천</span> */}\r\n                </div>\r\n            </Card>\r\n        </div>\r\n\r\n\r\n        <div className='home-wrap-full'>\r\n            <Card title={'score board'}>\r\n                <div className='home-score-wrap'>\r\n                    <div className='home-score-box'>\r\n                        <span className='home-score-horizontal-wrap sub-color'>\r\n                            <span className='home-score-horizontal-line'></span>\r\n                            <span className='home-score-horizontal-line'></span>\r\n                            <span className='home-score-horizontal-line'></span>\r\n                            <span className='home-score-horizontal-line'></span>\r\n                            <span className='home-score-horizontal-line'></span>\r\n                        </span>\r\n                        <span className='home-score-vertical-wrap sub-color'>\r\n                            <span className='home-score-vertical-line'></span>\r\n                            <span className='home-score-vertical-line'></span>\r\n                            <span className='home-score-vertical-line'></span>\r\n                            <span className='home-score-vertical-line'></span>\r\n                            <span className='home-score-vertical-line'></span>\r\n                            <span className='home-score-vertical-line'></span>\r\n                            <span className='home-score-vertical-line'></span>\r\n                            <span className='home-score-vertical-line'></span>\r\n                        </span>\r\n                        <span className='home-srore-time-tx'>time</span>\r\n                        <span className='home-srore-rating-tx'>rating</span>\r\n                        {sleepData.map(v => {\r\n                            const bottom = v.rating * 30 - 5;\r\n                            const left = (getSleepTime(v.sleepStart, v.sleepEnd) - 120) * 2 / 3 - 3\r\n\r\n                            return left > 320 ? '' : <span className='home-score-dot main-color'\r\n                                style={{ bottom, left }} key={v.id}\r\n                            ></span>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n\r\n        <div className='home-wrap-full'>\r\n            <Card title={'tips'}>\r\n                <div className='home-tips'>\r\n                    알고 계셨나요? 우리의 수면은 처음 90분이 가장 중요하다는 사실<br />\r\n                    잠에들고 처음으로 맞이하는 깊은수면의 질에 따라 나머지 수면의 질도 변한다고 합니다.\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nfunction mapStatetoProps(state, props) {\r\n    const { user, sleepData } = state;\r\n    return { user, sleepData }\r\n}\r\n\r\nfunction mapDispatchProps(dispatch) {\r\n    return {\r\n        connectSleepDB: (user) => dispatch(ACTION.setSleep(user)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchProps)(Home);","import { FB_AUTH } from '../components/_firebase'\r\nimport '../css/auth.css'\r\n\r\nconst Auth = () => {\r\n    function onClickSignInPopBtn() {\r\n        FB_AUTH.signInWithGoogle(false);\r\n    }\r\n\r\n    return (<div className='auth__wrap'>\r\n        <span className='auth__logo'>Good Sleep</span>\r\n        <div className='auth__btn_wrap'>\r\n            <button className='auth__btn' onClick={onClickSignInPopBtn}>sign In<br />With Google</button>\r\n            <button className='auth__btn' >show demo</button>\r\n        </div>\r\n    </div>)\r\n}\r\nexport default (Auth);","import { connect } from 'react-redux'\r\nimport { FB_AUTH } from './_firebase'\r\nimport '../css/header.css'\r\n\r\nconst Header = ({user,isLogedIn}) => {\r\n    function onClickSignBtn(){\r\n        FB_AUTH.signOut()\r\n    }\r\n\r\n    return (<div className='header-wrap main-color'>\r\n        {!isLogedIn ? <></> : <button onClick={onClickSignBtn} className='header-signout font-icon'>logout</button>}\r\n        <span className='header-nickname'>{user ? user.displayName:''} 의 수면생활</span>\r\n    </div>)\r\n}\r\n\r\nfunction mapStateToProps(state,props){\r\n    const {user} = state;\r\n    return({user})\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import { Link } from 'react-router-dom';\r\nimport '../css/footer.css'\r\n\r\nfunction Footer(){\r\n    return <div className='footer-wrap'>\r\n        <Link to='good_sleep/record'>\r\n            <button className='footer-btn sub-color font-color font-icon'>description</button>\r\n        </Link>\r\n        <Link to='good_sleep'>\r\n            <button className='footer-btn sub-color font-color font-icon'>home</button>\r\n        </Link>\r\n        <Link to='good_sleep/setting'>\r\n            <button className='footer-btn sub-color font-color font-icon'>settings</button>\r\n        </Link>\r\n    </div>\r\n}\r\n\r\nexport default Footer;","// import { useState } from 'react';\r\nimport '../css/numberslide.css'\r\n\r\n\r\nconst NumberSlide = ({val =0, min =0 ,max =9, setter = () => { }}) => {\r\n    const onClickBtn = (e) => {\r\n        const { target: { attributes: { add: { value } } } } = e;\r\n        setter(curr => {\r\n            const res = curr * 1 + value * 1;\r\n            if (res > max) {return min*1 }\r\n            else if (res < min) {return max*1 }\r\n            else{return res}\r\n        })\r\n    }\r\n\r\n    return <span className='numberslide-wrap'>\r\n        <span className='numberslide-up-btn font-icon main-color' add='1' onClick={onClickBtn}>arrow_drop_up</span>\r\n        <span className='numberslide-number-box'>\r\n            <span className='numberslide-disply'>\r\n                <span className='numberslide-prev-num main-color'>{val - 1}</span>\r\n                <span className='numberslide-cur-num main-color'>{val}</span>\r\n                <span className='numberslide-next-num main-color'>{val + 1}</span>\r\n            </span>\r\n        </span>\r\n        <span className='numberslide-down-btn font-icon main-color' add='-1' onClick={onClickBtn}>arrow_drop_down</span>\r\n    </span>\r\n}\r\n\r\nexport default NumberSlide;","import { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../css/addsleepdata.css'\r\nimport NumberSlide from './NumberSlide';\r\nimport { ACTION } from './store';\r\nimport { FB_DB } from './_firebase';\r\n\r\nconst AddSleepData = ({ addSleep, user, callbaclFn, isNew, editId, sleepObj, setSleep, _sleepData }) => {\r\n    const _today = new Date();\r\n    const [startH1, setStartH1] = useState(2);\r\n    const [startH2, setStartH2] = useState(3);\r\n    const [startM1, setStartM1] = useState(3);\r\n    const [startM2, setStartM2] = useState(0);\r\n    const [startHMax, setStartHMax] = useState(9)\r\n    const [startMMax, setStartMMax] = useState(9)\r\n\r\n    const [endH1, setEndH1] = useState(0);\r\n    const [endH2, setEndH2] = useState(7);\r\n    const [endM1, setEndM1] = useState(3);\r\n    const [endM2, setEndM2] = useState(0);\r\n    const [endHMax, setEndHMax] = useState(9)\r\n    const [endMMax, setEndMMax] = useState(9)\r\n\r\n    const [date, setDate] = useState(_today.getFullYear() + '' + addZero(_today.getMonth() + 1) + '' + addZero(_today.getDate()));\r\n    const [step, setStep] = useState(0)\r\n    const [sleepData, setSleepData] = useState({ rating: '3' })\r\n\r\n    useEffect(() => {\r\n        timeSet({ flag: \"H\", frontN: startH1, backNSetter: setStartH2, maxSetter: setStartHMax })\r\n        timeSet({ flag: \"M\", frontN: startM1, backNSetter: setStartM2, maxSetter: setStartMMax })\r\n        timeSet({ flag: \"H\", frontN: endH1, backNSetter: setEndH2, maxSetter: setEndHMax })\r\n        timeSet({ flag: \"M\", frontN: endM1, backNSetter: setEndM2, maxSetter: setEndMMax })\r\n\r\n    }, [startH1, startH2, startM1, startM2, endH1, endH2, endM1, endM2])\r\n\r\n    function timeSet({ flag, frontN, backNSetter, maxSetter }) {\r\n        if (flag === 'H') {\r\n            maxSetter(frontN === 2 ? 4 : 9);\r\n            backNSetter(curr => (frontN === 2) && (curr > 4) ? 4 : curr);\r\n        } else if (flag === 'M') {\r\n            maxSetter(frontN === 6 ? 0 : 9);\r\n            backNSetter(curr => (frontN === 6) ? 0 : curr);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //수정할 데이터가 변경시 초기값 세팅\r\n    useEffect(() => {\r\n        if (sleepObj) {\r\n            const startT = sleepObj.sleepStart;\r\n            const endT = sleepObj.sleepEnd;\r\n            setStartH1(startT.substr(0, 1));\r\n            setStartH2(startT.substr(1, 1));\r\n            setStartM1(startT.substr(2, 1));\r\n            setStartM2(startT.substr(3, 1));\r\n            setEndH1(endT.substr(0, 1));\r\n            setEndH2(endT.substr(1, 1));\r\n            setEndM1(endT.substr(2, 1));\r\n            setEndM2(endT.substr(3, 1));\r\n            setDate(sleepObj.date);\r\n            setSleepData(prev => { return { ...prev, rating: sleepObj.rating } })\r\n            setStep(0)\r\n            document.querySelectorAll('.add-data-step1-score').forEach(el => {\r\n                el.classList.remove('add-data-step1-selected', 'main-color')\r\n                if (el.attributes.rating.value === sleepObj.rating) {\r\n                    el.classList.add('add-data-step1-selected', 'main-color')\r\n                }\r\n            })\r\n        }\r\n    }, [sleepObj])\r\n\r\n    // step이 바뀔때마다 초기값 세팅\r\n    useEffect(() => {\r\n        const contentEl = isNew ?\r\n            document.querySelector('.add-data-new .add-data-contents') :\r\n            document.querySelector('.add-data-edit .add-data-contents')\r\n        contentEl.style.marginLeft = -250 * step + 'px'\r\n        setSleepData(prev => {\r\n            return {\r\n                ...prev,\r\n                sleepStart: (startH1 + '' + startH2 + '' + startM1 + '' + startM2),\r\n                sleepEnd: (endH1 + '' + endH2 + '' + endM1 + '' + endM2),\r\n                date: date\r\n            }\r\n        })\r\n    }, [step, isNew])\r\n\r\n    // 이전,다음 버튼 누를 때마다 세팅\r\n    const onBtnClick = e => {\r\n        const direction = e.target.innerText;\r\n        if (direction === 'prev') {\r\n            if (step > 0)\r\n                setStep(step - 1)\r\n        } else {\r\n            if (step < 3)\r\n                setStep(step + 1)\r\n            else {\r\n                if (isNew) {\r\n                    // if(_sleepData.filter(v=>v.date === sleepData.date).length != 0){\r\n                    //     window.alert('해당 날자에 이미 데이터가 존재합니다.')\r\n                    // }\r\n                    // else \r\n                    if (window.confirm('추가 하시겠습니까?')) {\r\n                        FB_DB.add(\"sleep\", {\r\n                            ...sleepData,\r\n                            uid: user.uid\r\n                        }, (id) => {\r\n                            addSleep({\r\n                                ...sleepData,\r\n                                uid: user.uid,\r\n                                id: id\r\n                            })\r\n                        });\r\n                        callbaclFn();\r\n                        setStep(0)\r\n                        setSleepData({\r\n                            date: _today.getFullYear() + '' + (_today.getMonth() + 1) + '' + _today.getDate(),\r\n                            sleepStart: '1203am',\r\n                            sleepEnd: \"0701am\",\r\n                            rating: '3',\r\n                        })\r\n                    }\r\n                } else {\r\n                    if (window.confirm('수정 하시겠습니까?')) {\r\n                        FB_DB.update(\"sleep\", sleepObj.id, {\r\n                            ...sleepData,\r\n                            uid: user.uid\r\n                        }, () => {\r\n                            setSleep(_sleepData.map(v => {\r\n                                return v.id === editId ? { ...sleepData, id: editId } : v;\r\n                            }))\r\n                        })\r\n                        callbaclFn();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onClickRating = (e) => {\r\n        document.querySelectorAll('.add-data-step1-score').forEach(el => {\r\n            el.classList.remove('add-data-step1-selected', 'main-color')\r\n        })\r\n        e.target.classList.add('add-data-step1-selected', 'main-color')\r\n        setSleepData({ ...sleepData, rating: e.target.attributes.rating.value })\r\n    }\r\n\r\n    return <div className={'add-data-wrap ' + (isNew ? 'add-data-new' : 'add-data-edit')}>\r\n        <div className='add-data-contents font-color'>\r\n            <div className='add-data-step1'>\r\n                <div className='add-data-step-text main-color'>잘 주무셨나요? <br />일어났을 때 기분을 선택해주세요</div>\r\n                <div className='add-data-step1-scores'>\r\n                    <span className='add-data-step1-score font-icon' onClick={onClickRating} rating='1'>sick</span>\r\n                    <span className='add-data-step1-score font-icon' onClick={onClickRating} rating='2'>mood_bad</span>\r\n                    <span className='add-data-step1-score font-icon add-data-step1-selected main-color' onClick={onClickRating} rating='3'>sentiment_satisfied</span>\r\n                    <span className='add-data-step1-score font-icon' onClick={onClickRating} rating='4'>mood</span>\r\n                    <span className='add-data-step1-score font-icon' onClick={onClickRating} rating='5'>emoji_emotions</span>\r\n                </div>\r\n            </div>\r\n            <div className='add-data-step2'>\r\n                <div className='add-data-step-text main-color'>몇시에 주무셨나요? <br />주무신 시간을 알려주세요</div>\r\n                <div className='add-data-step2-time'><span></span>\r\n                    <NumberSlide val={startH1} setter={setStartH1} max='2' />\r\n                    <NumberSlide val={startH2} setter={setStartH2} max={startHMax} />\r\n                    <NumberSlide val={startM1} setter={setStartM1} max='6' />\r\n                    <NumberSlide val={startM2} setter={setStartM2} max={startMMax} />\r\n                </div>\r\n            </div>\r\n            <div className='add-data-step3'>\r\n                <div className='add-data-step-text main-color'>몇시에 일어나셨나요? <br />일어난 시간을 알려주세요</div>\r\n                <div className='add-data-step3-time'><span></span>\r\n                    <NumberSlide val={endH1} setter={setEndH1} max='2' />\r\n                    <NumberSlide val={endH2} setter={setEndH2} max={endHMax} />\r\n                    <NumberSlide val={endM1} setter={setEndM1} max='6' />\r\n                    <NumberSlide val={endM2} setter={setEndM2} max={endMMax} />\r\n                </div>\r\n            </div>\r\n            {/* <div className='add-data-step4'>\r\n                <div className='add-data-step-text main-color'>오늘이 맞나요?? <br />마지막으로 날짜를 확인해주세요</div>\r\n                <div className='add-data-step4-date'>\r\n                    <span className='add-data-step4-year main-color' >{_today.getFullYear() + '-' + addZero(_today.getMonth() + 1) + '-' + addZero(_today.getDate())}</span>\r\n                </div>\r\n            </div> */}\r\n            <div className='add-data-step5'>\r\n                <div className='add-data-step-text main-color'>{isNew ? '등록' : '수정'}을 완료하시려면 <br />done 버튼을 클릭해주세요</div>\r\n            </div>\r\n        </div>\r\n        <div className='add-data-btn-wrap'>\r\n            <button className='add-data-btn sub-color font-color' onClick={onBtnClick}>prev</button>\r\n            <button className={'add-data-btn font-color ' + (step === 3 ? 'main-color' : 'sub-color')} onClick={onBtnClick}>{step === 3 ? 'done' : 'next'}</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n// const useInput = initialValue => {\r\n//     const [value, setValue] = useState(initialValue);\r\n//     const onChange = e => {\r\n//         const { target: { value } } = e;\r\n//         const { target: { attributes: { datatype } } } = e;\r\n\r\n//         if (datatype.value === 'hour' || datatype.value === 'minute') {\r\n//             if (isNaN(value * 1)) return;\r\n//             if (value.length > 2) return;\r\n//             if ((datatype.value === 'hour' && value * 1 > 24) || (datatype.value === 'minute' && value * 1 > 60)) return;\r\n//             setValue(value)\r\n//         }\r\n//         if (datatype.value === 'year') {\r\n//             const year = value.substr(0, 4) * 1;\r\n//             const month = value.substr(5, 2) * 1;\r\n//             const date = value.substr(8,) * 1;\r\n//             if (year !== new Date().getFullYear() * 1) return;\r\n//             if (month !== (new Date().getMonth() + 1) * 1) return;\r\n\r\n//             function dateCheck(date) {\r\n//                 if ([1, 3, 5, 7, 8, 10, 12].indexOf(month) !== -1 && date < 32) return true;\r\n//                 if ([4, 6, 9, 11].indexOf(month) !== -1 && date < 31) return true;\r\n//                 if (month === 2 && date < 29) return true;\r\n//                 return false;\r\n//             }\r\n//             if (value.length > 7 && dateCheck(date)) setValue(value)\r\n//         }\r\n//     }\r\n//     return { onChange, value, setValue }\r\n// }\r\n\r\nconst addZero = num => (num < 10 && num * 1 !== 0) ? '0' + num : num\r\n\r\nfunction mapStateToProps(state, props) {\r\n    const { editId } = props\r\n    const { user, sleepData } = state;\r\n    const sleepObj = sleepData.filter(v => v.id === editId)[0]\r\n    const _sleepData = sleepData;\r\n    return { user, sleepObj, _sleepData }\r\n}\r\n\r\nfunction mapDispatchProps(dispatch) {\r\n    return {\r\n        addSleep: (id) => dispatch(ACTION.addSleep(id)),\r\n        setSleep: (id) => dispatch(ACTION.setSleep(id)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(AddSleepData);","import { useEffect, useState } from 'react';\r\nimport '../css/popup.css'\r\nimport Card from \"../components/Card\";\r\n\r\nconst Popup = ({ isOpend, clossBtnClick, title, children }) => {\r\n    const [show, setShow] = useState(false)\r\n    const [showAnim, setShowAnim] = useState(false)\r\n    useEffect(() => {\r\n        setShow(isOpend)\r\n        setTimeout(() => {\r\n            setShowAnim(isOpend)\r\n        }, 50);\r\n    }, [isOpend])\r\n\r\n    const ClosingPop = () => {\r\n        setShow(false)\r\n        clossBtnClick()\r\n    }\r\n\r\n    return <div className={`${(show ? '' : 'popup-closed ') + (showAnim ? 'popup-anim' : '')}`}>\r\n        <div className='popup-wrap'>\r\n            <Card title={title}>\r\n                <div className='popup-contents'>\r\n                    {children}\r\n                </div>\r\n            </Card>\r\n        </div>\r\n        <div className='popup-background' onClick={ClosingPop}></div>\r\n    </div>\r\n}\r\n\r\nexport default Popup;","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport '../css/sleepcard.css'\r\nimport { ACTION } from \"./store\";\r\nimport { FB_DB } from \"./_firebase\";\r\n\r\nfunction SleepCard({ sleepData, id, removeSleep, addSleep,user,addBtnClick ,editBtnClick}) {\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n    const sleepObj = sleepData.filter(data => data.id === id)[0]\r\n    const date = `${sleepObj.date.substr(0, 4)}/${sleepObj.date.substr(4, 2)}/${sleepObj.date.substr(6, 2)}`\r\n    const emoji = getEmozi(sleepObj.rating);\r\n    const sleepTime = getSleepTime(sleepObj.sleepStart,sleepObj.sleepEnd)\r\n    function getEmozi(rating){\r\n        switch(rating){\r\n            case '1' : return 'sick';\r\n            case '2' : return 'mood_bad';\r\n            case '3' : return 'sentiment_satisfied';\r\n            case '4' : return 'mood';\r\n            case '5' : return 'emoji_emotions';\r\n            default :return;\r\n        }\r\n    }\r\n\r\n    function getSleepTime(time1,time2){\r\n        const h1 = time1.substr(0,2)*1;\r\n        const m1 = time1.substr(2,2)*1;\r\n        const h2 = time2.substr(0,2)*1;\r\n        const m2 = time2.substr(2,2)*1;\r\n\r\n       let diffH = h1> h2 ? 24+h2-h1 : h2-h1;\r\n       let diffM = m2-m1;\r\n\r\n       if(diffM <0){\r\n            diffM += 60;\r\n           diffH--;\r\n       }\r\n\r\n       return diffH +'시간 '+diffM+'분'\r\n    }\r\n\r\n    function deleteBtnClick() {\r\n        if (window.confirm('정말 삭제하시겠습니까?')) {\r\n            console.log(sleepObj.id)\r\n            FB_DB.delete('sleep', sleepObj.id)\r\n            setIsDeleted(true)\r\n            setTimeout(() => {\r\n                removeSleep(sleepObj.id);\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    function onEditBtnClick(){\r\n        editBtnClick(id);\r\n    }\r\n\r\n    function onAddBtnClick() {\r\n        addBtnClick()\r\n    }\r\n\r\n    return <div className={'sub-color sleepcard-wrap ' + (isDeleted ? 'deleted' : '')}>\r\n        {id !== 'new' ? <div className='sleepcard-old-wrap'>\r\n            <div className='sleepcard-header sub-color font-color '>\r\n                <span className='sleepcard-date'>{date}</span>\r\n            </div>\r\n            <div className='sleepcard-body theme-color'>\r\n                <span className='sleepcard-data'>\r\n                    <span className='sleepcard-emoji font-icon  main-color'>{emoji}</span>\r\n                    <span className='sleepcard-tx main-color'>{sleepTime}</span>\r\n                </span>\r\n                <span className='sleepcard-icon font-icon main-color' onClick={onEditBtnClick}>edit</span>\r\n                <span className='sleepcard-icon font-icon main-color' onClick={deleteBtnClick}>delete_forever</span>\r\n            </div>\r\n        </div>\r\n            : <>\r\n                <div className='sleepcard-new-wrap sub-color font-color '>\r\n                    <span className='sleepcard-plus-btn' onClick={onAddBtnClick}>add</span>\r\n                </div>\r\n            </>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n    const { sleepData,user } = state;\r\n    return {\r\n        sleepData: [\r\n            ...sleepData,\r\n            {\r\n                Rating: \"\",\r\n                date: \"\",\r\n                id: \"new\",\r\n                sleepEnd: \"\",\r\n                sleepStart: \"\",\r\n                uid: \"\",\r\n            }\r\n        ],\r\n        user\r\n    }\r\n}\r\n\r\nfunction mapDispatchProps(dispatch) {\r\n    return {\r\n        removeSleep: (id) => dispatch(ACTION.removeSleep(id)),\r\n        addSleep: (id) => dispatch(ACTION.addSleep(id)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchProps)(SleepCard);","import {useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddSleepData from \"../components/AddSleepData\";\r\nimport Popup from \"../components/Popup\";\r\nimport SleepCard from \"../components/SleepCard\";\r\nimport '../css/record.css'\r\n\r\nconst Record = ({ sleepData }) => {\r\n    const [isAddPopOpend, setIsAddPopOpend] = useState(false)\r\n    const [isEditPopOpend, setIsEditPopOpend] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n\r\n    const onAddBtnClick = () => {\r\n        setIsAddPopOpend(true)\r\n    }\r\n    const onEditBtnClick = (id) => {\r\n        setEditId(id)\r\n        setIsEditPopOpend(true)\r\n    }\r\n    const onCloseBtnClick = () => {\r\n        setIsAddPopOpend(false)\r\n        setIsEditPopOpend(false)\r\n    }\r\n\r\n    return <div className='record-wrap'>\r\n        <SleepCard id={'new'} addBtnClick={onAddBtnClick} />\r\n        {sleepData.map((data, i) => <SleepCard id={data.id} key={data.id} editBtnClick={onEditBtnClick} />)}\r\n        <Popup\r\n            isOpend={isAddPopOpend}\r\n            clossBtnClick={onCloseBtnClick}\r\n            title={'Add new sleep data'}>\r\n            <AddSleepData callbaclFn={onCloseBtnClick} isNew={true} />\r\n        </Popup>\r\n        <Popup\r\n            isOpend={isEditPopOpend}\r\n            clossBtnClick={onCloseBtnClick}\r\n            title={'Edit sleep data'}>\r\n            <AddSleepData callbaclFn={onCloseBtnClick} isNew={false} editId={editId} />\r\n        </Popup>\r\n    </div>\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { sleepData } = state;\r\n    let sortedSleepData = [...sleepData];\r\n    // if(sortedSleepData){\r\n    //     sortedSleepData.sort((a,b)=>b.date - a.date)\r\n    // }\r\n    return { sleepData:sortedSleepData }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Record);","import { connect } from \"react-redux\";\r\nimport { ACTION } from \"./store\";\r\n\r\nconst ColorSample = ({no,category,colorSet,setColorSet}) =>{\r\n    function onClick(){\r\n        console.log(colorSet)\r\n        setColorSet(colorSet)\r\n    }\r\n\r\n    return <span onClick={onClick} className={`color-sample color-${category}-${no}`}></span>\r\n}\r\n\r\nfunction mapStatetoProps(state,props){\r\n    let colorSet = {...state.colorSet};\r\n    const {category,no} = props;\r\n    colorSet[category+'Color'] = no;\r\n    return {\r\n        colorSet\r\n    }\r\n}\r\n\r\nfunction mapDispatchProps(dispatch) {\r\n    return {\r\n        setColorSet: (theme) => dispatch(ACTION.setColorSet(theme)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchProps)(ColorSample);","import ColorSample from \"./ColorSample\";\r\n\r\nconst Pallet = ({noSet,category}) =>{\r\n    return <div className='pallet-wrap'>\r\n        {\r\n            noSet.map(no=>{\r\n                return <ColorSample category={category} no={no} key={no}/>\r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Pallet;","import { connect } from 'react-redux'\r\nimport Pallet from '../components/Pallet'\r\nimport { FB_DB } from '../components/_firebase'\r\nimport '../css/setting.css'\r\nimport Card from '../components/Card'\r\n\r\nconst Setting = ({ updateColorSet, colorSet }) => {\r\n    const saveSetting = () => {\r\n        saveTheme()\r\n    }\r\n\r\n    const saveTheme = () => {\r\n        updateColorSet('colorSet', colorSet.id, colorSet)\r\n    }\r\n\r\n    const noSet = {\r\n        main: ['00','01', '02', '03', '04',\r\n            '05', '06', '07', '08'],\r\n        sub: ['00','01', '02', '03', '04',\r\n            '05', '06', '07', '08'],\r\n        theme: ['01', '02', '03', '04'],\r\n        font: ['01', '02', '03', '04']\r\n    }\r\n\r\n    return <div className='setting-wrap'>\r\n        <Card title={'Color'}>\r\n            <div className='setting-pallet-category'>main</div>\r\n            <Pallet category={'main'} noSet={noSet.main}></Pallet>\r\n            <div className='setting-pallet-category'>sub</div>\r\n            <Pallet category={'sub'} noSet={noSet.sub}></Pallet>\r\n            <div className='setting-pallet-category'>theme</div>\r\n            <Pallet category={'theme'} noSet={noSet.theme}></Pallet>\r\n            <div className='setting-pallet-category'>font</div>\r\n            <Pallet category={'font'} noSet={noSet.font}></Pallet>\r\n        </Card>\r\n        <button onClick={saveSetting} className='setting-save-btn main-color font-color'>save</button>\r\n    </div>\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { colorSet } = state;\r\n    return { colorSet }\r\n}\r\n\r\nfunction mapDispatchProps() {\r\n    return { updateColorSet: (name, id, data) => { FB_DB.update(name, id, data) } }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Setting);","// import provider from './components/_firebase'\nimport { FB_AUTH, FB_DB } from './components/_firebase'\nimport { useEffect, useState } from \"react\";\nimport Loading from './routes/Loading';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Auth from './routes/Auth';\nimport { connect } from 'react-redux';\nimport { ACTION } from './components/store';\nimport './css/common.css'\nimport './css/color.css'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Record from './routes/Record'\nimport Setting from './routes/Setting';\n\nfunction colorSetRest() {\n  ['01', '02', '03', '04', '05', '06', '07', '08'].forEach(no => {\n    document.getElementById('root').classList.remove('color-main-' + no)\n    document.getElementById('root').classList.remove('color-sub-' + no)\n    document.getElementById('root').classList.remove('color-font-' + no)\n    document.getElementById('root').classList.remove('color-theme-' + no)\n  })\n}\n\nfunction App({ setUser, connectSleepDB, connectThemeDB, colorSet }) {\n  const [isLogedIn, setIsLogedIn] = useState(false); // 로그인중인지\n  const [isLoading, setIsLoading] = useState(true); // 로딩중인지\n\n  colorSetRest();\n  document.getElementById('root').classList.add(`color-main-${colorSet.mainColor}`)\n  document.getElementById('root').classList.add(`color-sub-${colorSet.subColor}`)\n  document.getElementById('root').classList.add(`color-font-${colorSet.fontColor}`)\n  document.getElementById('root').classList.add(`color-theme-${colorSet.themeColor}`)\n\n  //app 시작시 초기 세팅\n  useEffect(() => {\n    //로그인시 user정보 세팅\n    FB_AUTH.authChange(user => {\n      //user정보가 있을때\n      if (user) {\n        setIsLogedIn(true);\n        const { displayName, uid, email } = user;\n        setUser({ displayName, uid, email })\n\n        //sleep data DB에 연결\n        FB_DB.get('sleep').then(res => {\n          connectSleepDB(res.filter(data => data.uid === user.uid))\n          setIsLoading(false);\n        })\n\n        //theme data DB에 연결\n        FB_DB.get('colorSet').then(res => {\n          const themeData = res.filter(data => data.uid === user.uid);\n          if (themeData.length === 0) {\n            FB_DB.add(\"colorSet\", {\n              mainColor: '01',\n              subColor: '01',\n              fontColor: '01',\n              themeColor: '01',\n              uid: user.uid\n            });\n          } else {\n            connectThemeDB(themeData[0])\n          }\n        })\n      }\n      //user정보가 없을 때\n      else { setIsLogedIn(false); setIsLoading(false); }\n    })\n  }, [connectSleepDB,setUser,connectThemeDB])\n\n  return (\n    isLoading ?\n      <Loading /> :\n      isLogedIn ?\n        <BrowserRouter>\n          <Header isLogedIn={isLogedIn} />\n          <Routes>\n            <Route path='good_sleep/*' element={<Home />}></Route>\n            <Route path='good_sleep/record' element={<Record />}></Route>\n            <Route path='good_sleep/setting' element={<Setting />}></Route>\n          </Routes>\n          <Footer />\n        </BrowserRouter>\n        :\n        <Auth />\n  );\n}\n\nfunction mapDispatchProps(dispatch) {\n  return {\n    setUser: (user) => dispatch(ACTION.setUser(user)),\n    connectSleepDB: (user) => dispatch(ACTION.setSleep(user)),\n    connectThemeDB: (user) => dispatch(ACTION.setColorSet(user)),\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { colorSet } = state;\n  return { colorSet }\n}\n\nexport default connect(mapStateToProps, mapDispatchProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './components/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}